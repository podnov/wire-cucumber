plugins {
	id 'jacoco'
	id 'java-library'
	id 'maven-publish'
}
apply plugin: 'maven'
apply plugin: 'signing'

repositories {
	jcenter()
}

ext {
	cucumberVersion = "4.7.4"
	isReleaseVersion = !version.endsWith("SNAPSHOT")
}

dependencies {
	implementation 'com.github.tomakehurst:wiremock-jre8:2.25.1'
	implementation 'io.cucumber:cucumber-java8:' + cucumberVersion
	implementation 'io.cucumber:cucumber-junit:' + cucumberVersion
	implementation 'org.slf4j:slf4j-api:1.7.30'

	testImplementation 'ch.qos.logback:logback-classic:1.2.3'
	testImplementation 'io.rest-assured:rest-assured:4.1.2'
	testImplementation 'junit:junit:4.12'
	testImplementation 'org.hamcrest:hamcrest:2.2'
	testImplementation 'org.mockito:mockito-core:3.2.4'
}

test {
	finalizedBy jacocoTestReport
}

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives javadocJar, sourcesJar
}

signing {
	required { isReleaseVersion && gradle.taskGraph.hasTask("publish") }
	sign configurations.archives
}

jacocoTestReport {
	reports {
		xml.enabled true
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
				'**/*Exception*',
				'**/*Constants*'
			])
		}))
	}
}

publishing {
	publications {
		maven(MavenPublication) {
			from components.java
		}
	}

	repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/podnov/wire-cucumber")
			credentials {
				username = System.getenv("GITHUB_ACTOR")
				password = System.getenv("GITHUB_TOKEN")
			}
		}
	}
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			pom.project {
				name 'wire-cucumber'
				packaging 'jar'
				// optionally artifactId can be defined here
				description 'The intent of this project is to make mocking external REST calls easier. This is achieved by standardizing how the mocks are configured and reducing the scaffolding needed to create and verify interactions with those mocks.'
				url 'https://github.com/podnov/wire-cucumber'

				scm {
					connection 'scm:https://github.com/podnov/wire-cucumber.git'
					developerConnection 'scm:git://github.com/podnov/wire-cucumber.git'
					url 'https://github.com/podnov/wire-cucumber'
				}

				licenses {
					license {
						name 'The GNU General Public License v3.0'
						url 'https://www.gnu.org/licenses/gpl-3.0.html'
					}
				}

				developers {
					developer {
						id 'podnov'
						name 'Evan Zeimet'
						email 'podnov@gmail.com'
					}
				}
			}
		}
	}
}
