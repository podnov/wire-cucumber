plugins {
	id 'jacoco'
	id 'java-library'
	id 'maven-publish'
	id 'signing'
}

repositories {
	jcenter()
}

ext {
	cucumberVersion = "6.10.4"
	isReleaseVersion = !version.endsWith("SNAPSHOT")
}

java {
	withSourcesJar()
	withJavadocJar()
}

compileJava {
	sourceCompatibility = '1.8'
	targetCompatibility = '1.8'
}

dependencies {
	implementation 'com.github.tomakehurst:wiremock-jre8:2.35.0'
	implementation 'io.cucumber:cucumber-java8:' + cucumberVersion
	implementation 'io.cucumber:cucumber-junit:' + cucumberVersion
	implementation 'org.slf4j:slf4j-api:1.7.31'

	testImplementation 'ch.qos.logback:logback-classic:1.2.3'
	testImplementation 'io.rest-assured:rest-assured:4.4.0'
	testImplementation 'junit:junit:4.13.2'
	testImplementation 'org.hamcrest:hamcrest:2.2'
	testImplementation 'org.mockito:mockito-core:3.11.2'
	testImplementation 'org.mockito:mockito-inline:3.11.2'
}

test {
	finalizedBy jacocoTestReport
}

artifacts {
	archives javadocJar, sourcesJar
}

jacocoTestReport {
	dependsOn test

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
				'**/*Exception*',
				'**/*Constants*'
			])
		}))
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from(components["java"])
			pom {
				name.set("wire-cucumber")
				description.set("The intent of this project is to make mocking external REST calls easier. This is achieved by standardizing how the mocks are configured and reducing the scaffolding needed to create and verify invocations of those mocks.")
				url.set("https://github.com/podnov/wire-cucumber")
				licenses {
					license {
						name.set("Apache License, Version 2.0")
						url.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
					}
				}
				developers {
					developer {
						id.set("podnov")
						name.set("Evan Zeimet")
						email.set("podnov@gmail.com")
					}
				}
				scm {
					connection.set("scm:https://github.com/podnov/wire-cucumber.git")
					developerConnection.set("scm:git://github.com/podnov/wire-cucumber.git")
					url.set("https://github.com/podnov/wire-cucumber")
				}
			}
		}
	}

	repositories {
		maven {
			def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
			def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

			credentials {
				username ossrhUsername
				password ossrhPassword
			}
		}
	}
}

signing {
	sign publishing.publications
}

/*
signing {
	sign(publishing.publications["mavenJava"])
}
*/

/**
signing {
	required { isReleaseVersion && gradle.taskGraph.hasTask("publish") }
	sign configurations.archives
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			pom.project {
				name 'wire-cucumber'
				packaging 'jar'
				// optionally artifactId can be defined here
				description 'The intent of this project is to make mocking external REST calls easier. This is achieved by standardizing how the mocks are configured and reducing the scaffolding needed to create and verify invocations of those mocks.'
				url 'https://github.com/podnov/wire-cucumber'

				scm {
					connection 'scm:https://github.com/podnov/wire-cucumber.git'
					developerConnection 'scm:git://github.com/podnov/wire-cucumber.git'
					url 'https://github.com/podnov/wire-cucumber'
				}

				licenses {
					license {
						name 'Apache License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}

				developers {
					developer {
						id 'podnov'
						name 'Evan Zeimet'
						email 'podnov@gmail.com'
					}
				}
			}
		}
	}
}
*/
